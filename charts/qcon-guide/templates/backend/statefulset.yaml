{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "app.name" . }}-backend
  labels:
    helm.sh/chart: {{ include "app.chart" . }}
    app.kubernetes.io/name: {{ include "app.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: backend
spec:
  serviceName: {{ default "backend" .Values.backend.service.name }}
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "app.name" . }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "app.name" . }}
        app.kubernetes.io/component: backend
        {{- with .Values.backend.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.backend.podAnnotations }}
      annotations:
{{ toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
{{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
{{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
{{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.securityContext }}
      securityContext:
{{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          image: {{ .Values.backend.image | quote }}
          imagePullPolicy: {{ .Values.backend.imagePullPolicy | default "IfNotPresent" }}
          ports:
            - name: tcp-postgres
              containerPort: {{ .Values.backend.service.port }}
          env:
            {{- if .Values.backend.auth.existingSecret }}
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.auth.existingSecret }}
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.auth.existingSecret }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.auth.existingSecret }}
                  key: POSTGRES_PASSWORD
            {{- else }}
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.name" . }}-backend-auth
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.name" . }}-backend-auth
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.name" . }}-backend-auth
                  key: POSTGRES_PASSWORD
            {{- end }}
            {{- with .Values.backend.extraEnv }}
{{ toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.backend.containerSecurityContext }}
          securityContext:
{{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      volumeClaimTemplates:
        - metadata:
            name: data
            {{- with .Values.backend.storage.annotations }}
            annotations:
{{ toYaml . | nindent 14 }}
            {{- end }}
            {{- with .Values.backend.storage.labels }}
            labels:
{{ toYaml . | nindent 14 }}
            {{- end }}
          spec:
            accessModes:
{{ toYaml .Values.backend.storage.accessModes | nindent 12 }}
            resources:
              requests:
                storage: {{ .Values.backend.storage.size }}
            {{- with .Values.backend.storage.storageClass }}
            storageClassName: {{ . | quote }}
            {{- end }}
{{- end }}
