apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.name" . }}
  labels:
{{ include "app.labels" . | nindent 4 }}
  {{- with (include "app.deployment.annotations" .) }}
{{ . | nindent 2 }}
  {{- end }}
spec:
  replicas: {{ .Values.processor.replicas | default 1 }}
  revisionHistoryLimit: {{ .Values.global.revisionHistoryLimit | default 3 }}
  progressDeadlineSeconds: {{ .Values.global.progressDeadlineSeconds | default 600 }}
  selector:
    matchLabels:
{{ include "app.selectorLabels" . | nindent 6 }}

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

  template:
    metadata:
      labels:
{{ include "app.labels" . | nindent 8 }}
        {{- with .Values.processor.extraLabels }}
{{ toYaml . | nindent 8 }}
        {{- end }}
      {{- with (include "app.pod.annotations" .) }}
{{ . | nindent 6 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "app.serviceAccount.name" . }}

      # Pod-level securityContext (defaults merged with .Values.securityContext.pod)
      securityContext:
{{ include "app.pod.securityContext" . | nindent 8 }}

      {{- $hasProc := (default false .Values.processor.enabled) -}}
      {{- $hasFE   := (default false .Values.frontend.enabled) -}}
      {{- if or $hasProc $hasFE }}
      containers:
{{- if $hasProc }}
        - name: {{ include "app.name" . }}
          image: "{{ .Values.processor.image.registry }}/{{ .Values.processor.image.repository }}:{{ .Values.processor.image.tag }}"
          imagePullPolicy: {{ .Values.processor.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: {{ .Values.processor.port | default 8000 }}
          {{- $procEnvFrom := include "app.componentEnvFrom" .Values.processor }}
          {{- if $procEnvFrom }}
          envFrom:
{{ $procEnvFrom | nindent 12 }}
          {{- end }}
          env:
            - name: APP_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/version']
{{- include "app.extraEnvironmentVars" .Values.processor | nindent 12 }}
          securityContext:
{{ include "app.container.securityContext" (dict "root" . "component" .Values.processor) | nindent 12 }}

          {{- $pm := include "app.componentVolumeMounts" .Values.processor -}}
          {{- $pd := include "app.dataStorage.processorVolumeMount" . -}}
          {{- if or $pm $pd }}
          volumeMounts:
{{- if $pm }}{{ $pm | nindent 12 }}{{- end }}
{{- if $pd }}{{ $pd | nindent 12 }}{{- end }}
          {{- end }}
{{- end }}

{{- if $hasFE }}
        - name: {{ default "frontend" .Values.frontend.name }}
          image: "{{ .Values.frontend.image.registry }}/{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: {{ .Values.frontend.port | default 8080 }}
          {{- $feEnvFrom := include "app.componentEnvFrom" .Values.frontend }}
          {{- if $feEnvFrom }}
          envFrom:
{{ $feEnvFrom | nindent 12 }}
          {{- end }}
          env:
            - name: APP_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/version']
{{- include "app.extraEnvironmentVars" .Values.frontend | nindent 12 }}
          securityContext:
{{ include "app.container.securityContext" (dict "root" . "component" .Values.frontend) | nindent 12 }}

          {{- with .Values.frontend.resources }}
          resources:
{{ toYaml . | nindent 12 }}
          {{- end }}

          {{- $fm := include "app.componentVolumeMounts" .Values.frontend | trim -}}
          {{- $fd := include "app.dataStorage.frontendVolumeMount" . -}}
          {{- if or $fm $fd }}
          volumeMounts:
{{- if $fm }}{{ $fm | nindent 12 }}{{- end }}
{{- if $fd }}{{ $fd | nindent 12 }}{{- end }}
          {{- else }}
          # Fallback defaults only if the user didn't define any mounts for the frontend
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
          {{- end }}
{{- end }}
      {{- else }}
      {{- fail "No containers would be rendered: set at least one of processor.enabled or frontend.enabled to true." }}
      {{- end }}

      {{- $pv := (include "app.podVolumes" .) | trim -}}
      {{- $pvc := (include "app.dataStorage.podVolume" .) | trim -}}
      {{- $def := (include "app.defaultFrontendVolumes" .) | trim -}}
      {{- if or $pv $pvc $def }}
      volumes:
        {{- if $pv  }}{{ $pv  | nindent 8 }}{{- end }}
        {{- if $pvc }}{{ $pvc | nindent 8 }}{{- end }}
        {{- if $def }}{{ $def | nindent 8 }}{{- end }}
      {{- end }}

      {{- include "imagePullSecrets" . | nindent 6 }}
