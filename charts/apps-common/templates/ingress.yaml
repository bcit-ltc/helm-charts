{{- if .Values.ingress.enabled -}}
{{- $svcName     := include "app.name" . -}}
{{- $svcPort     := .Values.service.port -}}
{{- $pathType    := (.Values.ingress.pathType | default "Prefix") -}}
{{- $defaultHost := printf "%s.%s" (include "app.name" .) (.Values.ingress.defaultDomain | default "example.com") -}}
{{- $host        := (ternary .Values.ingress.host $defaultHost (ne .Values.ingress.host "")) -}}
{{- $tlsSecret   := (ternary .Values.ingress.tlsSecret "star-ltc-bcit-ca" (ne .Values.ingress.tlsSecret "")) -}}
{{- $extraPaths  := .Values.ingress.extraPaths -}}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "app.name" . }}
  labels:
{{ include "app.labels" . | nindent 4 }}
  {{ include "app.ingress.annotations" . | nindent 2 }}
spec:
  tls:
    - hosts:
        - {{ $host | quote }}
      secretName: {{ $tlsSecret | quote }}
  {{- if .Values.ingress.ingressClassName }}
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  {{- end }}
  rules:
    - host: {{ $host | quote }}
      http:
        paths:
          {{- if $extraPaths }}
{{ toYaml $extraPaths | indent 10 }}
          {{- end }}
          - path: /
            pathType: {{ $pathType }}
            backend:
              service:
                name: {{ $svcName }}
                port:
                  number: {{ $svcPort }}
{{- end }}
