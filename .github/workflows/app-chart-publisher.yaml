name: Publish app Helm charts to GHCR (from GitHub Release)

on:
  release:
    types: [published]    # fires when helm/chart-releaser-action publishes a release
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: Release tag to publish from

permissions:
  contents: read
  packages: write       # needed to push to ghcr.io with GITHUB_TOKEN
  id-token: write

jobs:
  push-oci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (optional)
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Login to GHCR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # helm registry login doesn't support --password-stdin; pass -p directly
        run: |
          helm registry login ghcr.io -u "${{ github.actor }}" -p "${GH_TOKEN}"

      - name: Resolve tag (release or manual)
        id: tag
        env:
          REL_TAG: ${{ github.event.release.tag_name }}
          IN_TAG:  ${{ inputs.tag }}
        run: |
          echo "tag=${IN_TAG:-$REL_TAG}" >> "$GITHUB_OUTPUT"

      - name: Download chart assets for the tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # gh CLI needs this
        run: |
          mkdir -p dist
          gh release download "${{ steps.tag.outputs.tag }}" \
            --repo "${{ github.repository }}" \
            --pattern '*.tgz' \
            --dir dist

      - name: Push chart oci package to GHCR
        run: |
          shopt -s nullglob
          for pkg in dist/*.tgz; do
            echo "Pushing $pkg to GHCR…"
            helm push "$pkg" oci://ghcr.io/${{ github.repository_owner }}/oci
          done

      - name: Show pushed package name(s)

        # OCI ref is inferred from chart name + version inside the package
        # Example: oci://ghcr.io/bcit-ltc/oci/<chart>:<version>
        run: |
          for pkg in dist/*.tgz; do
            echo "Published: $pkg → ghcr.io/${{ github.repository_owner }}/oci"
          done

