name: Release charts (library first, then apps)

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: [ "Remotely-triggered chart bump & commit" ]
    branches:   [ main ]
    types: [ completed ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  GH_PAGES_URL: https://bcit-ltc.github.io/helm-charts
  LIB_NAME: apps-common
  CHARTS_DIR: charts

jobs:
  release-all:
    name: Release library, then apps
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Configure Git identity
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - uses: azure/setup-helm@v4
        with: { version: v3.14.4 }

      # Install the chart-releaser CLI ('cr') but don't run packaging yet
      - name: Install chart-releaser CLI
        uses: helm/chart-releaser-action@v1.7.0
        with:
          install_only: true
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ----------------------------
      # LIBRARY FIRST (apps-common)
      # ----------------------------
      - name: Package library (apps-common)
        run: |
          set -euo pipefail
          rm -rf .cr-release-packages
          mkdir -p .cr-release-packages
          cr package charts/apps-common --package-path .cr-release-packages

      - name: Upload library to Releases
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          cr upload \
            --owner "${GITHUB_REPOSITORY_OWNER}" \
            --git-repo "${GITHUB_REPOSITORY#*/}" \
            --skip-existing \
            --token "${GH_TOKEN}"

      - name: Rebuild gh-pages index (include library)
        env:
          REPO_URL: https://bcit-ltc.github.io/helm-charts
        run: |
          set -euo pipefail

          git fetch origin gh-pages:gh-pages || true
          rm -rf .gh-pages
          if git show-ref --verify --quiet refs/heads/gh-pages; then
            git worktree add .gh-pages gh-pages
          else
            git worktree add .gh-pages -b gh-pages
            (cd .gh-pages && git commit --allow-empty -m "init gh-pages")
          fi

          mkdir -p .gh-pages
          cp -f .cr-release-packages/*.tgz .gh-pages/ || true

          if [[ -f .gh-pages/index.yaml ]]; then
            helm repo index .gh-pages --url "${REPO_URL}" --merge .gh-pages/index.yaml
          else
            helm repo index .gh-pages --url "${REPO_URL}"
          fi

          git -C .gh-pages add -A
          if ! git -C .gh-pages diff --cached --quiet; then
            git -C .gh-pages commit -m "index: update Helm chart repo (library)"
            git -C .gh-pages push origin gh-pages
          else
            echo "No changes to gh-pages."
          fi

      # ----------------------------
      # APPS NEXT
      # ----------------------------
      - uses: mikefarah/yq@v4.44.3

      - name: Add chart repos for dependencies
        run: |
          set -euo pipefail
          helm repo add bcit-ltc https://bcit-ltc.github.io/helm-charts || true
          helm repo update

      # Prefer vendoring the library from the freshly packaged local artifact to avoid GH Pages/CDN lag.
      - name: Pre-vendor library into each app (prefer local .tgz; fallback to repo)
        env:
          LIB_NAME: ${{ env.LIB_NAME }}
        run: |
          set -euo pipefail
          lib_tgz="$(ls -1 .cr-release-packages/${LIB_NAME}-*.tgz | tail -n1 || true)"
          for d in charts/*; do
            [[ -f "$d/Chart.yaml" ]] || continue
            [[ "$(basename "$d")" == "${LIB_NAME}" ]] && continue
            if yq -e '.dependencies[] | select(.name=="'"${LIB_NAME}"'")' "$d/Chart.yaml" > /dev/null 2>&1; then
              ver="$(yq -r '.dependencies[] | select(.name=="'"${LIB_NAME}"'") | .version' "$d/Chart.yaml")"
              echo "==> Vendoring ${LIB_NAME}@$ver into $d/charts/"
              mkdir -p "$d/charts"
              if [[ -n "$lib_tgz" && "$lib_tgz" =~ ${LIB_NAME}-${ver}\.tgz$ ]]; then
                echo "Using local artifact: $lib_tgz"
                tar -xzf "$lib_tgz" -C "$d/charts"
              else
                echo "Falling back to repo pull"
                helm pull bcit-ltc/${LIB_NAME} --version "$ver" --untar --untardir "$d/charts"
              fi
              ls -la "$d/charts" || true
            fi
          done

      - name: Build chart dependencies (apps)
        run: |
          set -euo pipefail
          for d in charts/*; do
            [[ -f "$d/Chart.yaml" ]] || continue
            [[ "$(basename "$d")" == "apps-common" ]] && continue
            echo "==> helm dependency build $d"
            helm dependency build "$d"
          done

      - name: Package app charts (pre-package)
        run: |
          set -euo pipefail
          mkdir -p .cr-release-packages
          for d in charts/*; do
            [[ -f "$d/Chart.yaml" ]] || continue
            [[ "$(basename "$d")" == "apps-common" ]] && continue
            echo "==> helm package $d -d .cr-release-packages"
            helm package "$d" -d .cr-release-packages
          done
          ls -la .cr-release-packages || true

      - name: Upload app packages to Releases
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          cr upload \
            --owner "${GITHUB_REPOSITORY_OWNER}" \
            --git-repo "${GITHUB_REPOSITORY#*/}" \
            --skip-existing \
            --token "${GH_TOKEN}"

      - name: Rebuild gh-pages index (include apps)
        env:
          REPO_URL: https://bcit-ltc.github.io/helm-charts
        run: |
          set -euo pipefail
          git fetch origin gh-pages:gh-pages || true
          rm -rf .gh-pages
          if git show-ref --verify --quiet refs/heads/gh-pages; then
            git worktree add .gh-pages gh-pages
          els
